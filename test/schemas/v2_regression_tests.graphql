type Customer @model {
  id: ID!
  name: String!
  phoneNumber: String
  accountRepresentativeID: ID!
    @index(name: "byRepresentative", queryField: "customerByRepresentative")
}

type Todo
  @model(timestamps: { createdAt: "createdOn", updatedAt: "updatedOn" }) {
  content: String
}

# Implicit field
type Project @model {
  id: ID!
  name: String
  team: Team @hasOne
}

type Team @model {
  id: ID!
  name: String!
}

# Explicit field
type Project2 @model {
  id: ID!
  name: String
  teamID: ID
  team: Team2 @hasOne(fields: ["teamID"])
}

type Team2 @model {
  id: ID!
  name: String!
}

# Implicit
type Post @model {
  id: ID!
  title: String!
  comments: [Comment] @hasMany
}

type Comment @model {
  id: ID!
  content: String!
}

# Explicit
type Post2 @model {
  id: ID!
  title: String!
  comments: [Comment2] @hasMany(indexName: "byPost", fields: ["id"])
}

type Comment2 @model {
  id: ID!
  postID: ID! @index(name: "byPost", sortKeyFields: ["content"])
  content: String!
}

# type ManyPost @model {
#   id: ID!
#   title: String!
#   content: String
#   tags: [ManyTag] @manyToMany(relationName: "ManyPostManyTags")
# }

# type ManyTag @model {
#   id: ID!
#   label: String!
#   posts: [ManyPost] @manyToMany(relationName: "ManyPostManyTags")
# }

# Implicit
type BidiProject @model {
  id: ID!
  name: String
  team: BidiTeam @hasOne
}

type BidiTeam @model {
  id: ID!
  name: String!
  project: BidiProject @belongsTo
}

# Explicit
type BidiProject2 @model {
  id: ID!
  name: String
  team: BidiTeam2 @hasOne
}

type BidiTeam2 @model {
  id: ID!
  name: String!
  projectID: ID
  project: BidiProject2 @belongsTo(fields: ["projectID"])
}

# Explicit - Bi-directional Has Many
type BidiPost @model {
  id: ID!
  title: String!
  comments: [BidiComment] @hasMany(indexName: "byPost", fields: ["id"])
}

type BidiComment @model {
  id: ID!
  postID: ID! @index(name: "byPost", sortKeyFields: ["content"])
  content: String!
  post: BidiPost @belongsTo(fields: ["postID"])
}

# 7 - Blog Post Comment
type Blog7V2 @model {
  id: ID!
  name: String!
  posts: [Post7V2] @hasMany
}
type Post7V2 @model {
  id: ID!
  title: String!
  blog: Blog7V2 @belongsTo
  comments: [Comment7V2] @hasMany
}
type Comment7V2 @model {
  id: ID!
  content: String
  post: Post7V2 @belongsTo
}
